// Code generated by "stringer -type=IFDtag"; DO NOT EDIT.

package arw

import "fmt"

const _IFDtag_name = "NewSubFileTypeImageWidthImageHeightBitsPerSampleCompressionPhotometricInterpretationImageDescriptionMakeModelStripOffsetsOrientationSamplesPerPixelRowsPerStripStripByteCountsXResolutionYResolutionPlanarConfigurationResolutionUnitSoftwareDateTimeSubIFDsJPEGInterchangeFormatJPEGInterchangeFormatLengthYCbCrPositioningXMPShotInfoSonyRawFileTypeSonyCurveSR2SubIFDOffsetSR2SubIFDLengthSR2SubIFDKeyIDC_IFDIDC2_IFDMRWInfoBlackLevelWB_GRBGLevelsAutoWB_GRBGLevelsBlackLevel2WB_RGGBLevelsWB_RGBLevelsDaylightWB_RGBLevelsCloudyWB_RGBLevelsTungstenWB_RGBLevelsFlashWB_RGBLevels4500KWB_RGBLevelsFluorescentMaxApertureAtMaxFocalMaxApertureAtMinFocalMaxFocalLengthMinFocalLengthSR2DataIFDColorMatrixWB_RGBLevelsDaylight2WB_RGBLevelsCloudy2WB_RGBLevelsTungsten2WB_RGBLevelsFlash2WB_RGBLevels4500K2WB_RGBLevelsShade2WB_RGBLevelsFluorescent2WB_RGBLevelsFluorescentP1WB_RGBLevelsFluorescentP2WB_RGBLevelsFluorescentM1WB_RGBLevels8500KWB_RGBLevels6000KWB_RGBLevels3200KWB_RGBLevels2500KWhiteLevelVignettingCorrParamsChromaticAberrationCorrParamsDistortionCorrParamsCFARepeatPatternDimCFAPattern2ExposureTimeFNumberExifTagExposureProgramSpectralSensitivityGPSTagISOSpeedRatingsOECFSensitivityTypeRecommendedExposureIndexExifVersionDateTimeOriginalDateTimeDigitizedComponentsConfigurationCompressedBitsPerPixelShutterSpeedValueApertureValueBrightnessValueExposureBiasValueMaxApertureValueSubjectDistanceMeteringModeLightSourceFlashFocalLengthSubjectAreaMakerNoteUserCommentSubsecTimeSubsecTimeOriginalSubsecTimeDigitizedTag9400FlashpixVersionColorSpacePixelXDimensionPixelYDimensionRelatedSoundFileInteroperabilityTagFlashEnergySpatialFrequencyResponseFocalPlaneXResolutionFocalPlaneYResolutionFocalPlaneResolutionUnitSubjectLocationExposureIndexSensingMethodFileSourceSceneTypeCFAPatternCustomRenderedExposureModeWhiteBalanceDigitalZoomRatioFocalLengthIn35mmFilmSceneCaptureTypeGainControlContrastSaturationSharpnessDeviceSettingDescriptionSubjectDistanceRangeImageUniqueIDLensSpecificationLensModelFileFormatSonyModelIDCreativeStyleLensSpecFullImageSizePreviewImageSizePrintImageMatchingDefaultCropOriginDefaultCropSizeDNGPrivateData"

var _IFDtag_map = map[IFDtag]string{
	254:   _IFDtag_name[0:14],
	256:   _IFDtag_name[14:24],
	257:   _IFDtag_name[24:35],
	258:   _IFDtag_name[35:48],
	259:   _IFDtag_name[48:59],
	262:   _IFDtag_name[59:84],
	270:   _IFDtag_name[84:100],
	271:   _IFDtag_name[100:104],
	272:   _IFDtag_name[104:109],
	273:   _IFDtag_name[109:121],
	274:   _IFDtag_name[121:132],
	277:   _IFDtag_name[132:147],
	278:   _IFDtag_name[147:159],
	279:   _IFDtag_name[159:174],
	282:   _IFDtag_name[174:185],
	283:   _IFDtag_name[185:196],
	284:   _IFDtag_name[196:215],
	296:   _IFDtag_name[215:229],
	305:   _IFDtag_name[229:237],
	306:   _IFDtag_name[237:245],
	330:   _IFDtag_name[245:252],
	513:   _IFDtag_name[252:273],
	514:   _IFDtag_name[273:300],
	531:   _IFDtag_name[300:316],
	700:   _IFDtag_name[316:319],
	12288: _IFDtag_name[319:327],
	28672: _IFDtag_name[327:342],
	28688: _IFDtag_name[342:351],
	29184: _IFDtag_name[351:366],
	29185: _IFDtag_name[366:381],
	29217: _IFDtag_name[381:393],
	29248: _IFDtag_name[393:400],
	29249: _IFDtag_name[400:408],
	29264: _IFDtag_name[408:415],
	29440: _IFDtag_name[415:425],
	29442: _IFDtag_name[425:442],
	29443: _IFDtag_name[442:455],
	29456: _IFDtag_name[455:466],
	29459: _IFDtag_name[466:479],
	29824: _IFDtag_name[479:499],
	29825: _IFDtag_name[499:517],
	29826: _IFDtag_name[517:537],
	29827: _IFDtag_name[537:554],
	29828: _IFDtag_name[554:571],
	29830: _IFDtag_name[571:594],
	29856: _IFDtag_name[594:615],
	29857: _IFDtag_name[615:636],
	29858: _IFDtag_name[636:650],
	29859: _IFDtag_name[650:664],
	29888: _IFDtag_name[664:674],
	30720: _IFDtag_name[674:685],
	30752: _IFDtag_name[685:706],
	30753: _IFDtag_name[706:725],
	30754: _IFDtag_name[725:746],
	30755: _IFDtag_name[746:764],
	30756: _IFDtag_name[764:782],
	30757: _IFDtag_name[782:800],
	30758: _IFDtag_name[800:824],
	30759: _IFDtag_name[824:849],
	30760: _IFDtag_name[849:874],
	30761: _IFDtag_name[874:899],
	30762: _IFDtag_name[899:916],
	30763: _IFDtag_name[916:933],
	30764: _IFDtag_name[933:950],
	30765: _IFDtag_name[950:967],
	30847: _IFDtag_name[967:977],
	31101: _IFDtag_name[977:997],
	31104: _IFDtag_name[997:1026],
	31106: _IFDtag_name[1026:1046],
	33421: _IFDtag_name[1046:1065],
	33422: _IFDtag_name[1065:1076],
	33434: _IFDtag_name[1076:1088],
	33437: _IFDtag_name[1088:1095],
	34665: _IFDtag_name[1095:1102],
	34850: _IFDtag_name[1102:1117],
	34852: _IFDtag_name[1117:1136],
	34853: _IFDtag_name[1136:1142],
	34855: _IFDtag_name[1142:1157],
	34856: _IFDtag_name[1157:1161],
	34864: _IFDtag_name[1161:1176],
	34866: _IFDtag_name[1176:1200],
	36864: _IFDtag_name[1200:1211],
	36867: _IFDtag_name[1211:1227],
	36868: _IFDtag_name[1227:1244],
	37121: _IFDtag_name[1244:1267],
	37122: _IFDtag_name[1267:1289],
	37377: _IFDtag_name[1289:1306],
	37378: _IFDtag_name[1306:1319],
	37379: _IFDtag_name[1319:1334],
	37380: _IFDtag_name[1334:1351],
	37381: _IFDtag_name[1351:1367],
	37382: _IFDtag_name[1367:1382],
	37383: _IFDtag_name[1382:1394],
	37384: _IFDtag_name[1394:1405],
	37385: _IFDtag_name[1405:1410],
	37386: _IFDtag_name[1410:1421],
	37396: _IFDtag_name[1421:1432],
	37500: _IFDtag_name[1432:1441],
	37510: _IFDtag_name[1441:1452],
	37520: _IFDtag_name[1452:1462],
	37521: _IFDtag_name[1462:1480],
	37522: _IFDtag_name[1480:1499],
	37888: _IFDtag_name[1499:1506],
	40960: _IFDtag_name[1506:1521],
	40961: _IFDtag_name[1521:1531],
	40962: _IFDtag_name[1531:1546],
	40963: _IFDtag_name[1546:1561],
	40964: _IFDtag_name[1561:1577],
	40965: _IFDtag_name[1577:1596],
	41483: _IFDtag_name[1596:1607],
	41484: _IFDtag_name[1607:1631],
	41486: _IFDtag_name[1631:1652],
	41487: _IFDtag_name[1652:1673],
	41488: _IFDtag_name[1673:1697],
	41492: _IFDtag_name[1697:1712],
	41493: _IFDtag_name[1712:1725],
	41495: _IFDtag_name[1725:1738],
	41728: _IFDtag_name[1738:1748],
	41729: _IFDtag_name[1748:1757],
	41730: _IFDtag_name[1757:1767],
	41985: _IFDtag_name[1767:1781],
	41986: _IFDtag_name[1781:1793],
	41987: _IFDtag_name[1793:1805],
	41988: _IFDtag_name[1805:1821],
	41989: _IFDtag_name[1821:1842],
	41990: _IFDtag_name[1842:1858],
	41991: _IFDtag_name[1858:1869],
	41992: _IFDtag_name[1869:1877],
	41993: _IFDtag_name[1877:1887],
	41994: _IFDtag_name[1887:1896],
	41995: _IFDtag_name[1896:1920],
	41996: _IFDtag_name[1920:1940],
	42016: _IFDtag_name[1940:1953],
	42034: _IFDtag_name[1953:1970],
	42036: _IFDtag_name[1970:1979],
	45056: _IFDtag_name[1979:1989],
	45057: _IFDtag_name[1989:2000],
	45088: _IFDtag_name[2000:2013],
	45098: _IFDtag_name[2013:2021],
	45099: _IFDtag_name[2021:2034],
	45100: _IFDtag_name[2034:2050],
	50341: _IFDtag_name[2050:2068],
	50719: _IFDtag_name[2068:2085],
	50720: _IFDtag_name[2085:2100],
	50740: _IFDtag_name[2100:2114],
}

func (i IFDtag) String() string {
	if str, ok := _IFDtag_map[i]; ok {
		return str
	}
	return fmt.Sprintf("IFDtag(%d)", i)
}
